name: CI

# on:
#     - pull_request

on:
    push:
        branches:
            - 'main'

jobs:
    lint:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - name: Set up Python 3.9
              uses: actions/setup-python@v2
              with:
                  python-version: 3.9
            - name: Install dependencies
              run: pip install -r requirements-test.txt && pip install -r requirements.txt
            - name: Lint
              run: python runtests.py --lint-only

    test:
        runs-on: ubuntu-latest
        services:
            postgres:
                image: postgis/postgis:14-master
                env:
                    POSTGRES_USER: whereintheworld
                    POSTGRES_PASSWORD: whereintheworld
                    POSTGRES_DB: whereintheworld
                ports: ['5432:5432']
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        steps:
            - uses: actions/checkout@v2
            - name: Set up Python 3.9
              uses: actions/setup-python@v2
              with:
                  python-version: 3.9
            - name: Install OS dependencies
              run: |
                  sudo add-apt-repository -y ppa:ubuntugis/ppa
                  sudo apt-get update
                  sudo apt-get install gdal-bin python3-gdal
            - name: Install Python dependencies
              run: pip install -r requirements-test.txt && pip install -r requirements.txt
            - name: Tests
              env:
                  TEST: 1
              run: python runtests.py --no-lint
    docker:
        name: Build, test and tag the Docker image
        runs-on: ubuntu-latest
        needs: test
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v2
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2
              with:
                  driver-opts: network=host
            - name: Read the version
              id: version
              uses: 'notiz-dev/github-action-json-property@release'
              with:
                  path: 'package.json'
                  prop_path: 'version'
            - name: Read the image repo
              id: image
              uses: 'notiz-dev/github-action-json-property@release'
              with:
                  path: 'package.json'
                  prop_path: 'image'
            - name: Login to DockerHub
              uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Build and push to registry
              uses: docker/build-push-action@v3
              with:
                  context: .
                  push: true
                  tags: ${{steps.image.outputs.prop}}:${{steps.version.outputs.prop}}
            - name: Inspect
              run: |
                  docker buildx imagetools inspect ${{steps.image.outputs.prop}}:${{steps.version.outputs.prop}}
    helm:
        name: Deploy Helm on local k8s cluster
        runs-on: ubuntu-latest
        needs: docker
        steps:
            - name: Create k8s Kind Cluster
              uses: helm/kind-action@v1.2.0
            - name: Check cluster-info
              run: |
                  kubectl cluster-info
                  kubectl get pods -n kube-system
            - name: Set up Helm
              uses: azure/setup-helm@v1
              with:
                  version: v3.9.0
            - name: Install chart
              run: |
                  helm upgrade -i whereintheworld --set image.repository=${{steps.image.outputs.prop}},image.tag=${{steps.version.outputs.prop}} ./contrib/helm/whereintheworld --wait
            - name: Check pod status
              run: |
                  kubectl get pod -n default
